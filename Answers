ASSIGNMENT
Please note that it would be preferable to avoid relying on built-in methods such as collections, shuffle in Java, or arrow functions of JavaScript. Instead, creating a method or function from scratch and using your own logic in the assignment would be worth considering.
1. JAVA
A. Create an array with the values (1, 2, 3, 4, 5, 6, 7) and shuffle it.
B. Enter a Roman Number as input and convert it to an integer. (ex IX = 9)
C. Check if the input is pangram or not. (Pangram is a sentence that contains all the alphabet from a-z)

A. Shuffle an Array:
import java.util.Random;

public class ArrayShuffle {
    public static void main(String[] args) {
        int[] array = {1, 2, 3, 4, 5, 6, 7};
        shuffleArray(array);
        for (int num : array) {
            System.out.print(num + " ");
        }
    }

    public static void shuffleArray(int[] array) {
        Random rand = new Random();
        for (int i = array.length - 1; i > 0; i--) {
            int j = rand.nextInt(i + 1);
            int temp = array[i];
            array[i] = array[j];
            array[j] = temp;
        }
    }
}

B. Convert Roman Numeral to Integer:
public class RomanToInteger {
    public static void main(String[] args) {
        String romanNumeral = "IX";
        int result = convertToInteger(romanNumeral);
        System.out.println(result);
    }

    public static int convertToInteger(String romanNumeral) {
        int[] values = {1000, 500, 100, 50, 10, 5, 1};
        char[] symbols = {'M', 'D', 'C', 'L', 'X', 'V', 'I'};
        
        int result = 0;
        int prevValue = 0;

        for (int i = romanNumeral.length() - 1; i >= 0; i--) {
            char currentSymbol = romanNumeral.charAt(i);
            int currentValue = 0;
            for (int j = 0; j < symbols.length; j++) {
                if (symbols[j] == currentSymbol) {
                    currentValue = values[j];
                    break;
                }
            }

            if (currentValue < prevValue) {
                result -= currentValue;
            } else {
                result += currentValue;
            }
            
            prevValue = currentValue;
        }
        
        return result;
    }
}

C. Check for Pangram:
public class PangramChecker {
    public static void main(String[] args) {
        String input = "The quick brown fox jumps over the lazy dog";
        boolean isPangram = checkPangram(input);
        System.out.println(isPangram);
    }

    public static boolean checkPangram(String input) {
        input = input.toLowerCase();
        for (char c = 'a'; c <= 'z'; c++) {
            if (input.indexOf(c) == -1) {
                return false;
            }
        }
        return true;
    }
}


2 JavaScript
A. Take a sentence as an input and reverse every word in that sentence.
a. Example - This is a sunny day > shiT si a ynnus yad.
B. Perform sorting of an array in descending order.

A. Reverse Words in a Sentence:
function reverseWordsManually(sentence) {
    let words = [];
    let word = '';
    for (let i = 0; i < sentence.length; i++) {
        if (sentence[i] === ' ' || i === sentence.length - 1) {
            // If a space is found or it's the end of the sentence, reverse and add the word to the words array.
            if (i === sentence.length - 1) {
                word += sentence[i];
            }
            let reversedWord = '';
            for (let j = word.length - 1; j >= 0; j--) {
                reversedWord += word[j];
            }
            words.push(reversedWord);
            word = '';
        } else {
            word += sentence[i];
        }
    }
    return words.join(' ');
}

const inputSentence = "This is a sunny day";
const reversedSentence = reverseWordsManually(inputSentence);
console.log(reversedSentence);  // Output: "sihT si a ynnus yad"

B. Perform Sorting of an Array in Descending Order:
function bubbleSortDescending(array) {
    let n = array.length;
    for (let i = 0; i < n - 1; i++) {
        for (let j = 0; j < n - i - 1; j++) {
            if (array[j] < array[j + 1]) {
                // Swap elements if they are in the wrong order.
                let temp = array[j];
                array[j] = array[j + 1];
                array[j + 1] = temp;
            }
        }
    }
    return array;
}

const arrayToSort = [4, 1, 9, 2, 5, 6, 3];
const sortedArray = bubbleSortDescending(arrayToSort);
console.log(sortedArray);  // Output: [9, 6, 5, 4, 3, 2, 1]


3. HTML
A. Create a basic calculator using HTML, CSS, and JavaScript with the functionality of add, subtract, multiply and divide. Use the following picture for reference.
HTML:

html
<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" type="text/css" href="calculator.css">
</head>
<body>
    <div class="calculator">
        <input type="text" id="display" disabled>
        <div class="buttons">
            <button onclick="appendToDisplay('7')">7</button>
            <button onclick="appendToDisplay('8')">8</button>
            <button onclick="appendToDisplay('9')">9</button>
            <button onclick="appendToDisplay('+')">+</button>
            <button onclick="appendToDisplay('4')">4</button>
            <button onclick="appendToDisplay('5')">5</button>
            <button onclick="appendToDisplay('6')">6</button>
            <button onclick="appendToDisplay('-')">-</button>
            <button onclick="appendToDisplay('1')">1</button>
            <button onclick="appendToDisplay('2')">2</button>
            <button onclick="appendToDisplay('3')">3</button>
            <button onclick="appendToDisplay('*')">*</button>
            <button onclick="clearDisplay()">C</button>
            <button onclick="appendToDisplay('0')">0</button>
            <button onclick="calculateResult()">=</button>
            <button onclick="appendToDisplay('/')">/</button>
        </div>
    </div>
    <script src="calculator.js"></script>
</body>
</html>
CSS (calculator.css):

css
.calculator {
    width: 300px;
    margin: 0 auto;
    padding: 20px;
    background-color: #eee;
    text-align: center;
}

input {
    width: 100%;
    padding: 10px;
    font-size: 24px;
    margin-bottom: 10px;
}

.buttons {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 10px;
}

button {
    padding: 10px;
    font-size: 18px;
    background-color: #337ab7;
    color: white;
    border: none;
    cursor: pointer;
}

button:hover {
    background-color: #135292;
}
JavaScript (calculator.js):

javascript
let display = document.getElementById('display');
let input = '';

function appendToDisplay(value) {
    input += value;
    display.value = input;
}

function clearDisplay() {
    input = '';
    display.value = '';
}

function calculateResult() {
    try {
        input = eval(input);
        display.value = input;
    } catch (error) {
        display.value = 'Error';
        input = '';
    }
}

B. Create a survey form with Fields; First Name, Last Name, Date of Birth, Country (dropdown), Gender (checkbox), Profession, email, and mobile number. 
All the input fields are necessary to submit the form. Create two buttons Submit and Reset. Reset will reset the form while clicking on submit, first, 
it will check all the fields and necessary validations and then a popup will appear displaying all the selected values with the label in front of it.
On closing the popup, the form should reset all the values. Use the following for reference

HTML:

html
<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" type="text/css" href="survey.css">
</head>
<body>
    <div class="survey-form">
        <form id="surveyForm" onsubmit="return false;">
            <div class="form-group">
                <label for="firstName">First Name:</label>
                <input type="text" id="firstName" required>
            </div>

            <div class="form-group">
                <label for="lastName">Last Name:</label>
                <input type="text" id="lastName" required>
            </div>

            <div class="form-group">
                <label for="dob">Date of Birth:</label>
                <input type="date" id="dob" required>
            </div>

            <div class="form-group">
                <label for="country">Country:</label>
                <select id="country" required>
                    <option value="usa">USA</option>
                    <option value="canada">Canada</option>
                    <!-- Add more country options here -->
                </select>
            </div>

            <div class="form-group">
                <label>Gender:</label>
                <input type="checkbox" id="male"> <label for="male">Male</label>
                <input type="checkbox" id="female"> <label for="female">Female</label>
            </div>

            <div class="form-group">
                <label for="profession">Profession:</label>
                <input type="text" id="profession" required>
            </div>

            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" required>
            </div>

            <div class="form-group">
                <label for="mobile">Mobile Number:</label>
                <input type="tel" id="mobile" required>
            </div>

            <div class="form-buttons">
                <button onclick="submitForm()">Submit</button>
                <button onclick="resetForm()">Reset</button>
            </div>
        </form>
    </div>
    <div id="popup" class="popup">
        <div id="popup-content" class="popup-content">
            <span class="close" onclick="closePopup()">&times;</span>
            <h2>Survey Submission</h2>
            <div id="submitted-data" class="submitted-data"></div>
        </div>
    </div>
    <script src="survey.js"></script>
</body>
</html>
CSS (survey.css):

css
/* Styles for the survey form and popup */
/* Add your CSS styling here */
JavaScript (survey.js):

javascript
function submitForm() {
    // Collect form data
    const firstName = document.getElementById('firstName').value;
    const lastName = document.getElementById('lastName').value;
    const dob = document.getElementById('dob').value;
    const country = document.getElementById('country').value;
    const gender = document.querySelectorAll('input[type="checkbox"]:checked');
    const profession = document.getElementById('profession').value;
    const email = document.getElementById('email').value;
    const mobile = document.getElementById('mobile').value;

    // Check if all fields are filled
    if (
        firstName &&
        lastName &&
        dob &&
        country &&
        gender.length > 0 &&
        profession &&
        email &&
        mobile
    ) {
        // Create a popup to display the submitted data
        const popup = document.getElementById('popup');
        popup.style.display = 'block';

        const submittedData = document.getElementById('submitted-data');
        submittedData.innerHTML = `
            <p><strong>First Name:</strong> ${firstName}</p>
            <p><strong>Last Name:</strong> ${lastName}</p>
            <p><strong>Date of Birth:</strong> ${dob}</p>
            <p><strong>Country:</strong> ${country}</p>
            <p><strong>Gender:</strong> ${Array.from(gender).map(g => g.labels[0].textContent).join(', ')}</p>
            <p><strong>Profession:</strong> ${profession}</p>
            <p><strong>Email:</strong> ${email}</p>
            <p><strong>Mobile Number:</strong> ${mobile}</p>
        `;
    } else {
        alert('Please fill in all the required fields.');
    }
}

function resetForm() {
    const form = document.getElementById('surveyForm');
    form.reset();
}

function closePopup() {
    const popup = document.getElementById('popup');
    popup.style.display = 'none';
    resetForm();
}
